<?xml version="1.0"?>
<!-- A sample job config for sketching the k8s use case with shared fs -->
<job_conf>
    <plugins>
        <plugin id="local" type="runner" load="galaxy.jobs.runners.local:LocalJobRunner" workers="4"/>
        <plugin id="k8s" type="runner" load="galaxy.jobs.runners.kubernetes:KubernetesJobRunner">
            <param id="k8s_use_service_account">true</param>
            <param id="k8s_persistent_volume_claim_name">galaxy-pvc</param>
            <!-- The following mount path needs to be the initial part of the "file_path" and "new_file_path" paths
            set in universe_wsgi.ini (or equivalent general galaxy config file).
            -->
            <param id="k8s_persistent_volume_claim_mount_path">/opt/galaxy_data</param>
            <param id="k8s_namespace">default</param>
            <!-- Allows pods to retry up to this number of times, before marking the Job as failed -->
            <param id="k8s_pod_retrials">1</param>
        </plugin>
    </plugins>
    <handlers>
        <handler id="main"/>
    </handlers>
    <destinations default="local">
        <destination id="local" runner="local"/>
        <destination id="blankfilter-container" runner="k8s">
            <param id="docker_repo_override">container-registry.phenomenal-h2020.eu</param>
            <param id="docker_owner_override">phnmnl</param>
            <param id="docker_image_override">ex-blankfilter</param>
            <param id="docker_tag_override">latest</param>
            <!--
            <param id="container_port_80">8080</param>
            -->
            <param id="max_pod_retrials">3</param>
            <param id="docker_enabled">true</param>
        </destination>
        <destination id="batchfeature-container" runner="k8s">
            <param id="docker_repo_override">container-registry.phenomenal-h2020.eu</param>
            <param id="docker_owner_override">phnmnl</param>
            <param id="docker_image_override">ex-bfr</param>
            <param id="docker_tag_override">latest</param>
            <!--
            <param id="container_port_80">8080</param>
            -->
            <param id="max_pod_retrials">3</param>
            <param id="docker_enabled">true</param>
        </destination>
        <destination id="log2transformation-container" runner="k8s">
            <param id="docker_repo_override">container-registry.phenomenal-h2020.eu</param>
            <param id="docker_owner_override">phnmnl</param>
            <param id="docker_image_override">ex-log2transformation</param>
            <param id="docker_tag_override">latest</param>
            <!--
            <param id="container_port_80">8080</param>
            -->
            <param id="max_pod_retrials">3</param>
            <param id="docker_enabled">true</param>
        </destination>
        <destination id="iso2flux-container" runner="k8s">
            <param id="docker_repo_override">container-registry.phenomenal-h2020.eu</param>
            <param id="docker_owner_override">phnmnl</param>
            <param id="docker_image_override">iso2flux</param>
            <param id="docker_tag_override">dev_v0.2_cv0.2.23</param>
            <param id="max_pod_retrials">1</param>
            <param id="docker_enabled">true</param>
        </destination>
        <destination id="midcor-container" runner="k8s">
            <param id="docker_repo_override">container-registry.phenomenal-h2020.eu</param>
            <param id="docker_owner_override">phnmnl</param>
            <param id="docker_image_override">midcor</param>
            <param id="docker_tag_override">dev_v1.0_cv0.2.30</param>
            <param id="max_pod_retrials">3</param>
            <param id="docker_enabled">true</param>
        </destination>
        <destination id="isodyn-container" runner="k8s">
            <param id="docker_repo_override">container-registry.phenomenal-h2020.eu</param>
            <param id="docker_owner_override">phnmnl</param>
            <param id="docker_image_override">isodyn</param>
            <param id="docker_tag_override">latest</param>
            <param id="max_pod_retrials">3</param>
            <param id="docker_enabled">true</param>
        </destination>
        <destination id="ramid-container" runner="k8s">
            <param id="docker_repo_override">container-registry.phenomenal-h2020.eu</param>
            <param id="docker_owner_override">phnmnl</param>
            <param id="docker_image_override">ramid</param>
            <param id="docker_tag_override">dev_v1.0_cv0.1.4</param>
            <param id="max_pod_retrials">3</param>
            <param id="docker_enabled">true</param>
        </destination>
	<destination id="batman-container" runner="k8s">
            <param id="docker_enabled">true</param>
        </destination>
	<destination id="w4m-mtbls-dwnld-container" runner="k8s">
	    <param id="docker_repo_override">container-registry.phenomenal-h2020.eu</param>
            <param id="docker_owner_override">phnmnl</param>
            <param id="docker_image_override">mtbls-dwnld</param>
            <param id="docker_tag_override">latest</param>
            <param id="max_pod_retrials">3</param>
            <param id="docker_enabled">true</param>
        </destination>
	<destination id="w4m-univariate-container" runner="k8s">
	    <param id="docker_repo_override">container-registry.phenomenal-h2020.eu</param>
            <param id="docker_owner_override">phnmnl</param>
            <param id="docker_image_override">univariate</param>
            <param id="docker_tag_override">latest</param>
            <param id="max_pod_retrials">3</param>
            <param id="docker_enabled">true</param>
        </destination>
	<destination id="w4m-multivariate-container" runner="k8s">
	    <param id="docker_repo_override">container-registry.phenomenal-h2020.eu</param>
            <param id="docker_owner_override">phnmnl</param>
            <param id="docker_image_override">multivariate</param>
            <param id="docker_tag_override">latest</param>
            <param id="max_pod_retrials">3</param>
            <param id="docker_enabled">true</param>
        </destination>
        <destination id="w4m-biosigner-container" runner="k8s">
	    <param id="docker_repo_override">container-registry.phenomenal-h2020.eu</param>
            <param id="docker_owner_override">phnmnl</param>
            <param id="docker_image_override">biosigner</param>
            <param id="docker_tag_override">latest</param>
            <param id="max_pod_retrials">3</param>
            <param id="docker_enabled">true</param>
        </destination>
	<destination id="w4m-lcmsmatching-container" runner="k8s">
	    <param id="docker_repo_override">container-registry.phenomenal-h2020.eu</param>
            <param id="docker_owner_override">phnmnl</param>
            <param id="docker_image_override">lcmsmatching</param>
            <param id="docker_tag_override">latest</param>
            <param id="max_pod_retrials">3</param>
            <param id="docker_enabled">true</param>
        </destination>
	<destination id="msconvert2-container" runner="k8s">
	    <param id="docker_repo_override">container-registry.phenomenal-h2020.eu</param>
            <param id="docker_owner_override">phnmnl</param>
            <param id="docker_image_override">pwiz</param>
            <param id="docker_tag_override">latest</param>
            <param id="max_pod_retrials">3</param>
            <param id="docker_enabled">true</param>
        </destination>
        <destination id="nmrmlconv-container" runner="k8s">
	    <param id="docker_repo_override">container-registry.phenomenal-h2020.eu</param>
            <param id="docker_owner_override">phnmnl</param>
            <param id="docker_image_override">nmrmlconv</param>
            <param id="docker_tag_override">latest</param>
            <param id="max_pod_retrials">3</param>
            <param id="docker_enabled">true</param>
        </destination>
        <destination id="metfrag-cli-container" runner="k8s">
            <param id="docker_repo_override">container-registry.phenomenal-h2020.eu</param>
            <param id="docker_owner_override">phnmnl</param>
            <param id="docker_image_override">metfrag-cli</param>
            <param id="docker_tag_override">latest</param>
            <param id="max_pod_retrials">3</param>
            <param id="docker_enabled">true</param>
        </destination>
	<destination id="rtest-container" runner="k8s">
	    <param id="docker_repo_override">container-registry.phenomenal-h2020.eu</param>
            <param id="docker_owner_override">phnmnl</param>
            <param id="docker_image_override">rtest</param>
            <param id="docker_tag_override">latest</param>
            <param id="max_pod_retrials">3</param>
            <param id="docker_enabled">true</param>
        </destination>
        <destination id="mzml2isa-container" runner="k8s">
	    <param id="docker_repo_override">container-registry.phenomenal-h2020.eu</param>
            <param id="docker_owner_override">phnmnl</param>
            <param id="docker_image_override">mzml2isa</param>
            <param id="docker_tag_override">latest</param>
            <param id="max_pod_retrials">3</param>
            <param id="docker_enabled">true</param>
        </destination>
        <destination id="nmrml2isa-container" runner="k8s">
	    <param id="docker_repo_override">container-registry.phenomenal-h2020.eu</param>
            <param id="docker_owner_override">phnmnl</param>
            <param id="docker_image_override">nmrml2isa</param>
            <param id="docker_tag_override">latest</param>
            <param id="max_pod_retrials">3</param>
            <param id="docker_enabled">true</param>
        </destination>
	<destination id="mtbls-downloader-container" runner="k8s">
	    <param id="docker_repo_override">container-registry.phenomenal-h2020.eu</param>
            <param id="docker_owner_override">phnmnl</param>
            <param id="docker_image_override">scp-aspera</param>
            <param id="docker_tag_override">latest</param>
            <param id="max_pod_retrials">3</param>
            <param id="docker_enabled">true</param>
        </destination>
        <destination id="mtbls-labs-uploader-container" runner="k8s">
	    <param id="docker_repo_override">container-registry.phenomenal-h2020.eu</param>
            <param id="docker_owner_override">phnmnl</param>
            <param id="docker_image_override">mtbl-labs-uploader</param>
            <param id="docker_tag_override">latest</param>
            <param id="max_pod_retrials">3</param>
            <param id="docker_enabled">true</param>
        </destination>
        <destination id="container-metaboliteidconverter" runner="k8s">
           <param id="docker_repo_override">container-registry.phenomenal-h2020.eu</param>
           <param id="docker_owner_override">phnmnl</param>
           <param id="docker_image_override">metaboliteidconverter</param>
           <param id="docker_tag_override">latest</param>
           <param id="max_pod_retrials">3</param>
           <param id="docker_enabled">true</param>
        </destination>
	    <destination id="container-metabomatching" runner="k8s">
	    <param id="docker_repo_override">container-registry.phenomenal-h2020.eu</param>
            <param id="docker_owner_override">phnmnl</param>
            <param id="docker_image_override">metabomatching</param>
            <param id="docker_tag_override">latest</param>
            <param id="max_pod_retrials">3</param>
            <param id="docker_enabled">true</param>
        </destination>
        <destination id="leidenuniv-ms-vfetc-container" runner="k8s">
            <param id="docker_repo_override">container-registry.phenomenal-h2020.eu</param>
            <param id="docker_owner_override">phnmnl</param>
            <param id="docker_image_override">ms-vfetc</param>
            <param id="docker_tag_override">latest</param>
            <param id="max_pod_retrials">3</param>
            <param id="docker_enabled">true</param>
        </destination>

    </destinations>
    <tools>
        <!-- Tools can be configured to use specific destinations or handlers,
             identified by either the "id" or "tags" attribute.  If assigned to
             a tag, a handler or destination that matches that tag will be
             chosen at random.
         -->
        <tool id="BatchFeatureRemoval" destination="batchfeature-container"/>
        <tool id="upps_blankfilter" destination="blankfilter-container"/>
        <tool id="log2transformation" destination="log2transformation-container"/>
        <tool id="iso2flux" destination="iso2flux-container"/>
        <tool id="midcor" destination="midcor-container"/>
        <tool id="ramid" destination="ramid-container"/>
        <tool id="isodyn" destination="isodyn-container"/>
        <tool id="batman-nmr" destination="batman-container"/>
        <tool id="mtbls-dwnld" destination="w4m-mtbls-dwnld-container"/>
        <tool id="Univariate" destination="w4m-univariate-container"/>
        <tool id="Multivariate" destination="w4m-multivariate-container"/>
        <tool id="Biosigner" destination="w4m-biosigner-container"/>
        <tool id="lcmsmatching" destination="w4m-lcmsmatching-container"/>
        <tool id="msconvert2" destination="msconvert2-container"/>
        <tool id="nmrmlconv" destination="nmrmlconv-container"/>
        <tool id="show_chromatogram" destination="rtest-container"/>
        <tool id="mzml2isa" destination="mzml2isa-container"/>
        <tool id="nmrml2isa" destination="nmrml2isa-container"/>
        <tool id="mtbls-downloader" destination="mtbls-downloader-container"/>
        <tool id="mtbls-labs-uploader" destination="mtbls-labs-uploader-container"/>
        <tool id="metfragcli" destination="metfrag-cli-container"/>
        <tool id="Metabolite_ID_Converter" destination="container-metaboliteidconverter" />
        <tool id="metabomatching" destination="container-metabomatching"/>
        <tool id="ms-vfetc" destination="leidenuniv-ms-vfetc-container"/>
    </tools>
</job_conf>
