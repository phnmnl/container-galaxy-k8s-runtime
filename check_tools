#!/usr/bin/env perl

use strict;
use warnings "all";
use File::Basename;
use File::Spec::Functions 'catfile';
use Getopt::Long;
use XML::Simple;

# Constants {{{1
################################################################

my $SCRIPTNAME = basename($0);
my $SCRIPTPATH = dirname($0);

# Variables {{{1
################################################################

my $INPUT_FOLDER = '.';
my $HELP = 0;

# Print help {{{1
################################################################

sub print_help {
	print "Usage: $SCRIPTNAME [options]

This program will scan the configuration files for tools, and check
that they are correctly defined.

Options:
   -h, --help           Print this help message and exits.
   -i,--input <FOLDER>  Set the input folder to use. Default is '.'.
"
}

# Read args {{{1
################################################################

sub read_args {

	GetOptions('help|h' => \$HELP, 'input|i' => \$INPUT_FOLDER) or print_help();

	print_help() if $HELP;

	if (@ARGV > 0) {
		print "No arguments allowed.\n";
		print_help();
	}
}

# List tools {{{1
################################################################

sub list_tools {

	my $tool_conf_file = catfile($SCRIPTPATH, 'config', 'tool_conf.xml');
	die "No file \"$tool_conf_file\"." unless -f $tool_conf_file;

	# Read tool_conf.xml and get all XML tool paths.
	my $xml_parser = new XML::Simple;
	my $tools = $xml_parser->XMLin($tool_conf_file);
	use Data::Dumper;
	print Dumper($tools);

	# In each XML, get:
	#    - the tool ID,
	#    - the tool name
	#    - the version number
	#    - the command
}

# Check command {{{1
################################################################

sub check_command (\%) {
	my ($tools) = @_;
}

# Main {{{1
################################################################

read_args();
my %tools = list_tools();
#check_command(\%tools);
# Check phenomenal_tools2container.yaml
# Check job_conf.xml
# Get containers repos and check tool version in README
# Check that container exists
# Check latest container version on Jenkins.
